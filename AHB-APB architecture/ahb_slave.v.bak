module ahb_slave(hclk, hwrite_reg, hreadyin, hwdata, haddr, htrans, hresp,hrdata,valid, hwrite, valid, hwrite_reg1,hwrite_reg2,haddr1,haddr2,hwdata2,tempselx);
input hclk,hresetn,hreadyin;
input [31:0]hwrite_reg, hwdata, haddr;
input [1:0] htrans;
input [31:0] prdata;
output [1:0] hresp;
output reg [31:0] hrdata;
output reg valid;
output reg [31:0] hwrite_reg1, hwrite_reg2;
output reg [31:0] haddr1,haddr2,hwdata1,hwdata2;
output reg [2:0] tempselx;
output reg [31:0] hrdata;
always@(posedge hclk)
begin
	if(!hresetn)
	 begin
		haddr1<=0;
		haddr2<=0;
		hwdata1<=0;
		hwdata2<=0;
		hwrite_reg1<=0;
		hwrite_reg2<=0;
	 end
	else
	 begin
		haddr1<=haddr;
		haddr2<=haddr1;
		hwdata1<=hwdata;
		hwdata2<=hwdata1;
		hwrite_reg1<=hwrite_reg;
		hwrite_reg2<=hwrite_reg1;
	 end
	end
always@(*)
 begin
  valid=0;
  if (hreadyin==1'b1 && (haddr>=8'h8000_0000 && haddr<=8'h8c00_0000) && (htrans==2'd2 || htrans == 2'd3))
  valid=1;
  else
   valid=0;
end
always@(*)
begin
tempselx=3'b00;
if(haddr>=8'h8000_0000 && haddr <8'h8400_0000)
tempselx=3'b001;
else if(haddr>=8'h8400_0000 && haddr <8'h8800_0000)
tempselx=3'b010;
else if(haddr>=8'h8800_0000 && haddr <8'h8c00_0000)
tempselx=3'b100;
assign hrdata=prdata;
end
endmodule
